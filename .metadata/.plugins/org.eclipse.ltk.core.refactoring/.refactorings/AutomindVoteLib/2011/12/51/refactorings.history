<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;cl.automind.vote.empathy.CmoPerformanceRule&apos; to &apos;CmoPerformanceIncreaseRule&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.CmoPerformanceRule&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.CmoPerformanceIncreaseRule&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;CmoPerformanceRule&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;cl.automind.vote.empathy{CmoPerformanceRule.java[CmoPerformanceRule" matchStrategy="1" name="CmoPerformanceIncreaseRule" qualified="false" references="true" similarDeclarations="false" stamp="1323995937552" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;DS_CMOPERFORMANCE&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;DS_CMO_PERFORMANCE_INCREASE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_CMOPERFORMANCE&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_CMO_PERFORMANCE_INCREASE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;DS_CMOPERFORMANCE&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^DS_CMOPERFORMANCE" name="DS_CMO_PERFORMANCE_INCREASE" references="true" setter="false" stamp="1323996090209" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;DS_CMOPERFORMANCES&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;DS_CMO_PERFORMANCE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_CMOPERFORMANCES&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_CMO_PERFORMANCE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;DS_CMOPERFORMANCES&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^DS_CMOPERFORMANCES" name="DS_CMO_PERFORMANCE" references="true" setter="false" stamp="1323996119907" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;R_CMO_PERFORMANCE&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;R_CMO_PERFORMANCE_INCREASE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_CMO_PERFORMANCE&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_CMO_PERFORMANCE_INCREASE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;R_CMO_PERFORMANCE&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^R_CMO_PERFORMANCE" name="R_CMO_PERFORMANCE_INCREASE" references="true" setter="false" stamp="1323996126955" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;R_CMOPERFORMANCES&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;R_CMO_PERFORMANCE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_CMOPERFORMANCES&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_CMO_PERFORMANCE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;R_CMOPERFORMANCES&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^R_CMOPERFORMANCES" name="R_CMO_PERFORMANCE" references="true" setter="false" stamp="1323996132253" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;CmoPerformanceIncreaseRule.java&apos; to &apos;cl.automind.vote.empathy.CmoPerformanceIncreaseRule.java&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Destination element: &apos;cl.automind.vote.empathy.CmoPerformanceIncreaseRule.java&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.CmoPerformanceIncreaseRule.java&apos;" description="Copy compilation unit" destination="/src&lt;cl.automind.vote.empathy{CmoPerformanceIncreaseRule.java" element1="/src&lt;cl.automind.vote.empathy{CmoPerformanceIncreaseRule.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1323996492676" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;INCREASE&apos; in &apos;cl.automind.vote.empathy.CmoPerformanceRule&apos; to &apos;PERFORMANCE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.CmoPerformanceRule.INCREASE&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.CmoPerformanceRule.PERFORMANCE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;INCREASE&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{CmoPerformanceRule.java[CmoPerformanceRule^INCREASE" name="PERFORMANCE" references="true" setter="false" stamp="1323996649236" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;TotalScoreRule.java&apos; to &apos;cl.automind.vote.empathy.TotalScoreRule.java&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Destination element: &apos;cl.automind.vote.empathy.TotalScoreRule.java&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.TotalScoreRule.java&apos;" description="Copy compilation unit" destination="/src&lt;cl.automind.vote.empathy{TotalScoreRule.java" element1="/src&lt;cl.automind.vote.empathy{TotalScoreRule.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1324006226868" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;cl.automind.vote.empathy.AboveAveragePerformanceRule.TotalScoreRuleMessage&apos; to &apos;Message&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAveragePerformanceRule.TotalScoreRuleMessage&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAveragePerformanceRule.Message&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;TotalScoreRuleMessage&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;cl.automind.vote.empathy{AboveAveragePerformanceRule.java[AboveAveragePerformanceRule[TotalScoreRuleMessage" matchStrategy="1" name="Message" qualified="false" references="true" similarDeclarations="false" stamp="1324008673427" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.idEstablishment&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.idEstablishment&apos;&#x0D;&#x0A;- Getter method name: &apos;getIdEstablishment&apos;&#x0D;&#x0A;- Setter method name: &apos;setIdEstablishment&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;idEstablishment&apos;" flags="589830" getter="getIdEstablishment" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^idEstablishment" insertion="-1" setter="setIdEstablishment" stamp="1324040992082" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.idCourse&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.idCourse&apos;&#x0D;&#x0A;- Getter method name: &apos;getIdCourse&apos;&#x0D;&#x0A;- Setter method name: &apos;setIdCourse&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;idCourse&apos;" flags="589830" getter="getIdCourse" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^idCourse" insertion="1" setter="setIdCourse" stamp="1324040995172" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.idUser&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.idUser&apos;&#x0D;&#x0A;- Getter method name: &apos;getIdUser&apos;&#x0D;&#x0A;- Setter method name: &apos;setIdUser&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;idUser&apos;" flags="589830" getter="getIdUser" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^idUser" insertion="3" setter="setIdUser" stamp="1324040999538" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.firstName&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.firstName&apos;&#x0D;&#x0A;- Getter method name: &apos;getFirstName&apos;&#x0D;&#x0A;- Setter method name: &apos;setFirstName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;firstName&apos;" flags="589830" getter="getFirstName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^firstName" insertion="5" setter="setFirstName" stamp="1324041002931" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.secondName&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.secondName&apos;&#x0D;&#x0A;- Getter method name: &apos;getSecondName&apos;&#x0D;&#x0A;- Setter method name: &apos;setSecondName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;secondName&apos;" flags="589830" getter="getSecondName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^secondName" insertion="7" setter="setSecondName" stamp="1324041006073" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.firstLastName&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.firstLastName&apos;&#x0D;&#x0A;- Getter method name: &apos;getFirstLastName&apos;&#x0D;&#x0A;- Setter method name: &apos;setFirstLastName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;firstLastName&apos;" flags="589830" getter="getFirstLastName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^firstLastName" insertion="9" setter="setFirstLastName" stamp="1324041009388" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.secondLastName&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.secondLastName&apos;&#x0D;&#x0A;- Getter method name: &apos;getSecondLastName&apos;&#x0D;&#x0A;- Setter method name: &apos;setSecondLastName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;secondLastName&apos;" flags="589830" getter="getSecondLastName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^secondLastName" insertion="11" setter="setSecondLastName" stamp="1324041013865" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename type &apos;cl.automind.vote.empathy.AboveAveragePerformanceDataSource&apos; to &apos;AboveAverageDataSource&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAveragePerformanceDataSource&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageDataSource&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AboveAveragePerformanceDataSource&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;cl.automind.vote.empathy{AboveAveragePerformanceDataSource.java[AboveAveragePerformanceDataSource" matchStrategy="1" name="AboveAverageDataSource" qualified="false" references="true" similarDeclarations="false" stamp="1324045057696" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;cl.automind.vote.empathy.AboveAveragePerformanceRule&apos; to &apos;AboveAverageRule&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAveragePerformanceRule&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageRule&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AboveAveragePerformanceRule&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;cl.automind.vote.empathy{AboveAveragePerformanceRule.java[AboveAveragePerformanceRule" matchStrategy="1" name="AboveAverageRule" qualified="false" references="true" similarDeclarations="false" stamp="1324045064186" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;DS_ABOVE_AVERAGE_PERFORMANCE&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;DS_ABOVE_AVERAGE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_ABOVE_AVERAGE_PERFORMANCE&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.DS_ABOVE_AVERAGE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;DS_ABOVE_AVERAGE_PERFORMANCE&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^DS_ABOVE_AVERAGE_PERFORMANCE" name="DS_ABOVE_AVERAGE" references="true" setter="false" stamp="1324045304713" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;R_ABOVE_AVERAGE_PERFORMANCE&apos; in &apos;cl.automind.vote.empathy.EmpathicConstants&apos; to &apos;R_ABOVE_AVERAGE&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_ABOVE_AVERAGE_PERFORMANCE&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.EmpathicConstants.R_ABOVE_AVERAGE&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;R_ABOVE_AVERAGE_PERFORMANCE&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;cl.automind.vote.empathy{EmpathicConstants.java[EmpathicConstants^R_ABOVE_AVERAGE_PERFORMANCE" name="R_ABOVE_AVERAGE" references="true" setter="false" stamp="1324045316639" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename enum constant &apos;QuestionOnly&apos; of &apos;cl.automind.vote.empathy.AboveAverageRule.Mode&apos; to &apos;Question&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRule.Mode.QuestionOnly&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageRule.Mode.Question&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename enum constant &apos;QuestionOnly&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.enum.constant" input="/src&lt;cl.automind.vote.empathy{AboveAverageRule.java[AboveAverageRule[Mode^QuestionOnly" name="Question" references="true" setter="false" stamp="1324045725748" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename enum constant &apos;CmoOnly&apos; of &apos;cl.automind.vote.empathy.AboveAverageRule.Mode&apos; to &apos;Cmo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRule.Mode.CmoOnly&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageRule.Mode.Cmo&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename enum constant &apos;CmoOnly&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.enum.constant" input="/src&lt;cl.automind.vote.empathy{AboveAverageRule.java[AboveAverageRule[Mode^CmoOnly" name="Cmo" references="true" setter="false" stamp="1324045731116" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename enum constant &apos;CourseOnly&apos; of &apos;cl.automind.vote.empathy.AboveAverageRule.Compare&apos; to &apos;Course&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRule.Compare.CourseOnly&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageRule.Compare.Course&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename enum constant &apos;CourseOnly&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.enum.constant" input="/src&lt;cl.automind.vote.empathy{AboveAverageRule.java[AboveAverageRule[Compare^CourseOnly" name="Course" references="true" setter="false" stamp="1324045736029" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename enum constant &apos;EstablishmentOnly&apos; of &apos;cl.automind.vote.empathy.AboveAverageRule.Compare&apos; to &apos;Establishment&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRule.Compare.EstablishmentOnly&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageRule.Compare.Establishment&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename enum constant &apos;EstablishmentOnly&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.enum.constant" input="/src&lt;cl.automind.vote.empathy{AboveAverageRule.java[AboveAverageRule[Compare^EstablishmentOnly" name="Establishment" references="true" setter="false" stamp="1324045741203" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;total&apos; in &apos;cl.automind.vote.empathy.AboveAverageRule.evaluateImpl(...)&apos; to &apos;scoreSum&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRule.evaluateImpl(Object...).total&apos;&#x0D;&#x0A;- Renamed element: &apos;total&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;total&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;cl.automind.vote.empathy{AboveAverageRule.java[AboveAverageRule~evaluateImpl~\[QObject;@total!912!925!916!920!I" name="scoreSum" references="true" stamp="1324047544707" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;cl.automind.vote.model.UserInfo.user&apos; in &apos;cl.automind.vote.model.UserInfo&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.model.UserInfo.user&apos;&#x0D;&#x0A;- Getter method name: &apos;getUser&apos;&#x0D;&#x0A;- Setter method name: &apos;setUser&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;user&apos;" flags="589830" getter="getUser" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;cl.automind.vote.model{UserInfo.java[UserInfo^user" insertion="14" setter="setUser" stamp="1324048611673" version="1.0" visibility="1"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageDataSource.java&apos;" description="Delete element" element1="/src&lt;cl.automind.vote.empathy{AboveAverageDataSource.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1324054508993" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;CmoPerformanceDataSource.java&apos; to &apos;cl.automind.vote.empathy.CmoPerformanceDataSource.java&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Destination element: &apos;cl.automind.vote.empathy.CmoPerformanceDataSource.java&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.CmoPerformanceDataSource.java&apos;" description="Copy compilation unit" destination="/src&lt;cl.automind.vote.empathy{CmoPerformanceDataSource.java" element1="/src&lt;cl.automind.vote.empathy{CmoPerformanceDataSource.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1324054523082" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;cl.automind.vote.empathy.AboveAverageRules&apos; to &apos;AboveAverageCmoRule&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageRules&apos;&#x0D;&#x0A;- Renamed element: &apos;cl.automind.vote.empathy.AboveAverageCmoRule&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;AboveAverageRules&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;cl.automind.vote.empathy{AboveAverageRules.java[AboveAverageRules" matchStrategy="1" name="AboveAverageCmoRule" qualified="false" references="true" similarDeclarations="false" stamp="1324054914841" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;AboveAverageCmoRule.java&apos; to &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Destination element: &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;" description="Copy compilation unit" destination="/src&lt;cl.automind.vote.empathy{AboveAverageCmoRule.java" element1="/src&lt;cl.automind.vote.empathy{AboveAverageCmoRule.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1324055000835" units="1" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;AboveAverageCmoRule.java&apos; to &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;&#x0D;&#x0A;- Original project: &apos;AutomindVoteLib&apos;&#x0D;&#x0A;- Destination element: &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;&#x0D;&#x0A;- Original element: &apos;cl.automind.vote.empathy.AboveAverageCmoRule.java&apos;" description="Copy compilation unit" destination="/src&lt;cl.automind.vote.empathy{AboveAverageCmoRule.java" element1="/src&lt;cl.automind.vote.empathy{AboveAverageCmoRule.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1324055021280" units="1" version="1.0"/>
</session>