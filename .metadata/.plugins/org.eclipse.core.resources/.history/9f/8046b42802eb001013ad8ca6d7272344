package cl.automind.vote.utils;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.InterfaceAddress;
import java.net.NetworkInterface;
import java.util.Enumeration;

public class IpFetcher {

	public static String fetchIp(){
	    try {
	        for (Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements();) {
	            NetworkInterface intf = en.nextElement();
	            for (Enumeration<InetAddress> enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements();) {
	                InetAddress inetAddress = enumIpAddr.nextElement();
	                if (!inetAddress.isLoopbackAddress()) {
	                    return inetAddress.getHostAddress().toString();
	                }
	            }
	        }
	    } catch (Exception ex) {
	    }
		return "";
	}

//	public static String fetchIp(){
//		try{
//			for (
//			    final Enumeration< NetworkInterface > interfaces = NetworkInterface.getNetworkInterfaces( );
//			    interfaces.hasMoreElements( );
//			){
//			    final NetworkInterface cur = interfaces.nextElement( );
//			    if ( cur.isLoopback( ) )  continue;
//			    System.out.println( "interface " + cur.getName( ) );
//			    for ( final InterfaceAddress addr : cur.getInterfaceAddresses( ) )
//			    {
//			        final InetAddress inet_addr = addr.getAddress( );
//			        if ( !( inet_addr instanceof Inet4Address ) ) continue;
//			        System.out.println( "  address: " + inet_addr.getHostAddress( ) + "/" + addr.getNetworkPrefixLength( ) );
//			        System.out.println( "  broadcast address: " + addr.getBroadcast( ).getHostAddress( ) );
//			        return inet_addr.getHostAddress();
//			    }
//			}
//		}
//		catch (Exception e){
//
//		}
//		return "";
//	}
}
