package cl.automind.empathy.fw.data.sql;

import gcampos.dev.interfaces.structural.INamed;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

public class QueryDescriptor implements INamed{
	private Map<String,Collection<Integer>> paramPositions;
	private String name;

	public QueryDescriptor(String name){
		setName(name);
		setParamPositions(new HashMap<String, Collection<Integer>>());
	}
	private void setName(String name){
		this.name = name;
	}
	@Override
	public String getName() {
		return name;
	}
	public void setParamPositions(Map<String,Collection<Integer>> paramPositions) {
		this.paramPositions = paramPositions;
	}
	public Map<String,Collection<Integer>> getParamPositions() {
		return paramPositions;
	}

	public boolean containsKey(String key){
		return getParamPositions().containsKey(key);
	}

	public void addParam(String paramName){
		if (getParamPositions().containsKey(paramName)) return;
		getParamPositions().put(paramName, new ArrayList<Integer>());
	}

	public void addParamInPosition(String paramName, int position){
		if (!getParamPositions().containsKey(paramName)) return;
		Collection<Integer> positions =  getParamPositions().get(paramName);
		if(positions.contains(position)) return;
		positions.add(position);
	}

	public void getParamPosition(String paramName, int position){

	}

}
